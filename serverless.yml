service: bamboo-server
useDotenv: true

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  region: ap-northeast-2
  stage: api

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
    GatewayResponseDefault5XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: "ApiGatewayRestApi"

functions:
  getAlgorithemList:
    handler: src/handler.post.getAlgorithemList
    events:
      - http:
          path: post/AlgorithemList
          method: get
          cors: true
  createAlgorithem:
    handler: src/handler.post.wirteAlogorithem
    events:
      - http:
          path: post/create
          method: post
          cors: true
  changeStatusAlgorithem:
    handler: src/handler.post.setAlogorithemStatus
    events:
      - http:
          path: post/setStatus/{id}
          method: post
  modifyAlgorithem:
    handler: src/handler.post.modifyAlogirithemContent
    events:
      - http:
          path: post/modify/{id}
          method: patch
          cors: true
  reportAlgorithem:
    handler: src/handler.post.reportAlogorithem
    events:
      - http:
          path: post/report{id}
          method: patch
          cors: true
  deleteAlgorithem:
    handler: src/handler.post.deleteAlgorithem
    events:
      - http:
          path: post/delete/{id}
          method: delete
          cors: true
  auth:
    handler: src/handler.authAdmin
    events:
      - http:
          path: auth
          method: post
          cors: true
  verify:
    handler: src/handler.getVerifyQuestion
    events:
      - http:
          path: verify
          method: get
          cors: true
plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin
  - serverless-offline
custom:
  dotenv:
    required:
      env:
        - PORT
        - MONGO_URL
        - DISCORD_WEBHOOK
        - DISCORD_TEST_WEBHOOK
        - DISCORD_MANAGEMENT_WEBHOOK
        - ADMIN_PASSWORD
        - JWT_SECRET
